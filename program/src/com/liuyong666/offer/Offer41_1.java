package com.liuyong666.offer;

import java.util.ArrayList;
import java.util.Arrays;

public class Offer41_1 {
	/*
	 * 和为S的两个数字且乘积最小
	 * 题目描述
	 * 		输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，
	 * 		如果有多对数字的和等于S，输出两个数的乘积最小的。 
	 * 输出描述:
	 * 		对应每个测试案例，输出两个数，小的先输出。
	 */
	public ArrayList<Integer> findNumbersWithSum(int [] array,int sum) {
        ArrayList<Integer> list = new ArrayList<Integer>();
        if(array == null || array.length < 2){
            return list;
        } 
        int low = 0;
        int high = array.length - 1;
        while(low < high){
            int curSum = array[low] + array[high];
            if(curSum == sum){
                //由于数组是递增排序的，所以第一个找到的数对肯定是乘积最小的。
                //比如，1+4=2+3，如果从第一个位置开始找的话，显然1与4的乘积是最小的
                list.add(array[low]);
                list.add(array[high]);
                break;
            }else if(curSum > sum){
                high--;
            }else{
                low++;
            }
        }
        return list;
        
    }

}
